<?php
namespace gamboamartin\notificaciones\models;

use base\orm\_modelo_parent_sin_codigo;

use gamboamartin\errores\errores;
use gamboamartin\notificaciones\mail\_mail;
use PDO;
use stdClass;

class not_rel_mensaje extends _modelo_parent_sin_codigo {
    public function __construct(PDO $link){
        $tabla = 'not_rel_mensaje';
        $columnas = array($tabla=>false,'not_mensaje'=>$tabla,'not_receptor'=>$tabla,'not_emisor'=>'not_mensaje');
        $campos_obligatorios = array('not_mensaje_id','not_receptor_id');

        $no_duplicados = array();

        $campos_view = array();
        $columnas_extra = array();

        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, campos_view: $campos_view, columnas_extra: $columnas_extra,
            no_duplicados: $no_duplicados, tipo_campos: array());

        $this->NAMESPACE = __NAMESPACE__;

        $this->etiqueta = 'Mensajes';
    }

    public function alta_bd(array $keys_integra_ds = array('descripcion')): array|stdClass
    {
        $not_mensaje = (new not_mensaje(link: $this->link))->registro(registro_id: $this->registro['not_mensaje_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener not_mensaje',data: $not_mensaje);
        }

        $not_receptor = (new not_receptor(link: $this->link))->registro(registro_id: $this->registro['not_receptor_id']);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener not_receptor',data: $not_receptor);
        }

        if(!isset($this->registro['descripcion'])){
            $descripcion = $not_mensaje['not_emisor_email'].' '.$not_mensaje['not_mensaje_asunto'].' '.
                $not_receptor['not_receptor_email'].' '.date('YmdHis');
            $this->registro['descripcion'] = $descripcion;
        }
        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al dar de alta mensaje',data: $r_alta_bd);
        }
        return $r_alta_bd;
    }

    final public function envia_email(int $not_rel_mensaje_id){
        $not_rel_mensaje = $this->registro(registro_id: $not_rel_mensaje_id, retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener mensaje',data:  $not_rel_mensaje);
        }


        $mail = (new _mail())->envia(mensaje: $not_rel_mensaje);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al enviar mensaje',data:  $mail);
        }
        return $mail;
    }


}